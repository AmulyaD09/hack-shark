{"ast":null,"code":"// import { createContext, useEffect, useReducer } from \"react\";\n// import AuthReducers from \"./AuthReducer\";\n\n// const INITIAL_STATE = {\n//   currentUser: JSON.parse(localStorage.getItem(\"user\")) || null,\n//   isLoading: false,\n//   error: false,\n// };\n\n// export const AuthContext = createContext(INITIAL_STATE);\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducers, INITIAL_STATE);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"user\", JSON.stringify(state.currentUser));\n//   }, [state.currentUser]);\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser: state.currentUser,\n//         isLoading: state.isLoading,\n//         error: state.error,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"names":[],"sources":["/home/beehyv/Desktop/hashshark/src/context/AuthContext.js"],"sourcesContent":["// import { createContext, useEffect, useReducer } from \"react\";\n// import AuthReducers from \"./AuthReducer\";\n\n// const INITIAL_STATE = {\n//   currentUser: JSON.parse(localStorage.getItem(\"user\")) || null,\n//   isLoading: false,\n//   error: false,\n// };\n\n// export const AuthContext = createContext(INITIAL_STATE);\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducers, INITIAL_STATE);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"user\", JSON.stringify(state.currentUser));\n//   }, [state.currentUser]);\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser: state.currentUser,\n//         isLoading: state.isLoading,\n//         error: state.error,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}